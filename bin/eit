#!/usr/bin/env ruby

opts  = lambda{ |opt | opt.start_with?('-') }
exist = lambda{ |path| File.exist?(path)    }
args  =  ARGV.select(&opts)
paths =  ARGV.reject(&opts)
files = paths.select(&exist)
nons  = paths.reject(&exist)
prog  = case editor = ENV['EIT_EDITOR'] || ENV['EDITOR'] || 'vim'
        when 'textmate'; %w[open -a /Applications/TextMate.app]
        when 'sublime2'; %w[subl --new-window]
        when 'vim'
          if files.size > 1
            dir    = File.dirname(files.first || '')
            cwd    = if dir == '.' then '' else "#{dir}/" end
            ignore = Dir.glob("#{cwd}*", File::FNM_DOTMATCH).
              reject{ |p| files.include?(p) || p == '.' }.
              map{ |p| "'#{Regexp.escape(File.basename(p))}'" }
            files  = ['.']
            ['vim', '-c', "let NERDTreeIgnore=[#{ignore.join(', ')}]"]
          else
            %w[vim]
          end
        else           ; [editor]
        end

cmds = prog + args + files

puts("\e[33m#{cmds.join(' ')}\e[m")
system(*cmds)

if nons.any?
  puts "\e[35m#{nons.map{|p|"'#{p}'"}.join(', ')} were not existed.\e[m"
end

exit unless $DEBUG

$DEBUG = false
require 'highline'
$DEBUG = true
H = HighLine.new

'eit
 eit --help
 eit asd
 eit ~/.bash_profile
 eit ~/.bash_profile ~/.vimrc
 eit ~/.bash_profile asd'.split("\n").map(&:strip).each do |cmd|
 puts `#{cmd}`
 puts "Command: #{cmd}"
 exit if H.choose('y', 'n') == 'n'
 puts
end
